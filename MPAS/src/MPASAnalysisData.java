/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.*;
import java.io.File;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import java.sql.*;
/**
 *
 * @author nanda
 */
public class MPASAnalysisData extends javax.swing.JFrame {

    /**
     * Creates new form AnalysisData
     */
    Connection con;
    Statement s;
    ResultSet rs;
    String movie;
    int totalTickets, maxWeeks;
    float avgOccupancy, revenue;
    public MPASAnalysisData(String movie) {
        this.movie = movie;
        totalTickets = 0;
        maxWeeks = 0;
        avgOccupancy = 0;
        revenue = 0;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mpas", "root", "root");
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(this, "Database Error!");
            this.setVisible(false);
            this.dispose();
            System.exit(0);
        }
        initComponents();
        try {
            s = con.createStatement();
            rs = s.executeQuery("select * from MovieData where name='"+movie+"';");
            while(rs.next()) {
                detailsArea.append(rs.getString(2)+"\t\t"+rs.getString(3)+"\t    "+rs.getString(4)+"\t\t"+rs.getString(5)+"\n");
                maxWeeks = rs.getInt(2);
                avgOccupancy += rs.getFloat(3);
                totalTickets += rs.getInt(4);
                revenue += rs.getFloat(5);
            }
            avgOccupancy /= maxWeeks;
            maxweeks.setText(Integer.toString(maxWeeks));
            avgocc.setText(Float.toString(avgOccupancy));
            tickets.setText(Integer.toString(totalTickets));
            rev.setText(Float.toString(revenue));
        }
        catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        plotgraphbutton = new javax.swing.JButton();
        allscroll = new javax.swing.JScrollPane();
        weeklylist = new javax.swing.JTable();
        totalscroll = new javax.swing.JScrollPane();
        totalstats = new javax.swing.JTable();
        datamovielabel = new javax.swing.JLabel();
        totallabel = new javax.swing.JLabel();
        analysisbutton = new javax.swing.JButton();
        otherbutton = new javax.swing.JButton();
        detailsArea = new java.awt.TextArea();
        maxweeks = new javax.swing.JLabel();
        avgocc = new javax.swing.JLabel();
        tickets = new javax.swing.JLabel();
        rev = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        plotgraphbutton.setText("Plot Graph");
        plotgraphbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plotgraphbuttonActionPerformed(evt);
            }
        });

        weeklylist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Week", "Occupancy %", "Tickets Sold", "Revenue"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        allscroll.setViewportView(weeklylist);

        totalstats.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Weeks", "Occupancy %", "Tickets Sold", "Revenue"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        totalscroll.setViewportView(totalstats);

        datamovielabel.setText("Movie Name");

        totallabel.setText("Total");

        analysisbutton.setText("Analysis");
        analysisbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analysisbuttonActionPerformed(evt);
            }
        });

        otherbutton.setText("Other Movie");
        otherbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherbuttonActionPerformed(evt);
            }
        });

        detailsArea.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        detailsArea.setEditable(false);

        maxweeks.setText("0");

        avgocc.setText("0");

        tickets.setText("0");

        rev.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalscroll, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(allscroll)
                            .addComponent(detailsArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(216, 216, 216)
                                        .addComponent(datamovielabel))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(23, 23, 23)
                                        .addComponent(maxweeks)
                                        .addGap(130, 130, 130)
                                        .addComponent(avgocc, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(43, 43, 43)
                                        .addComponent(tickets, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(62, 62, 62)
                                        .addComponent(rev, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 57, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(254, 254, 254)
                                .addComponent(totallabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addComponent(plotgraphbutton)
                                .addGap(27, 27, 27)
                                .addComponent(analysisbutton)
                                .addGap(31, 31, 31)
                                .addComponent(otherbutton)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(datamovielabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(allscroll, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detailsArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totallabel)
                .addGap(1, 1, 1)
                .addComponent(totalscroll, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(maxweeks)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(avgocc, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tickets)
                        .addComponent(rev)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(plotgraphbutton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(analysisbutton)
                        .addComponent(otherbutton)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void plotgraphbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plotgraphbuttonActionPerformed
        // TODO add your handling code here:
        String json = "";
        try {
            s = con.createStatement();
            rs = s.executeQuery("select * from MovieData where name='"+movie+"';");
            json = "{\"data\":[";
            int i = 0;
            while(rs.next()) {
                if(!rs.getString(3).equals("0")) {
                    if(i == 0) json = json + rs.getString(3);
                    else json = json + ", " + rs.getString(3);
                }
                i++;
            }
            json = json + "]}";
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error!");
        }
        ProcessBuilder processBuilder = new ProcessBuilder();
        processBuilder.command("bash", "-c", "curl -X POST 'http://localhost:5000/plot' -d '"+json+"'");
        Process process;
        try {
            process = processBuilder.start();
            process.waitFor();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error!");
        }
        File file = new File("/Users/nanda/Work/MPAS/plot.png");
        try {
            Desktop.getDesktop().open(file);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error!");
        }
    }//GEN-LAST:event_plotgraphbuttonActionPerformed

    private void analysisbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analysisbuttonActionPerformed
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MPASEnterAnalysis(movie).setVisible(true);
            }
        });
    }//GEN-LAST:event_analysisbuttonActionPerformed

    private void otherbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherbuttonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        this.dispose();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MPASUtility().setVisible(true);
            }
        });
    }//GEN-LAST:event_otherbuttonActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane allscroll;
    private javax.swing.JButton analysisbutton;
    private javax.swing.JLabel avgocc;
    private javax.swing.JLabel datamovielabel;
    private java.awt.TextArea detailsArea;
    private javax.swing.JLabel maxweeks;
    private javax.swing.JButton otherbutton;
    private javax.swing.JButton plotgraphbutton;
    private javax.swing.JLabel rev;
    private javax.swing.JLabel tickets;
    private javax.swing.JLabel totallabel;
    private javax.swing.JScrollPane totalscroll;
    private javax.swing.JTable totalstats;
    private javax.swing.JTable weeklylist;
    // End of variables declaration//GEN-END:variables
}
